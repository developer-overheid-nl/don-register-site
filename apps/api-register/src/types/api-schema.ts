/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1/apis": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Alle API's ophalen
         * @description Geeft een lijst met alle geregistreerde API's terug.
         */
        get: operations["listApis"];
        put?: never;
        /**
         * Registreer een nieuwe API
         * @description Registreer een nieuwe API met een OpenAPI URL.
         */
        post: operations["createApi"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/apis/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Specifieke API ophalen
         * @description Geeft de details van een specifieke API terug.
         */
        get: operations["retrieveApi"];
        /**
         * Specifieke API updaten
         * @description Update een bestaande API.
         */
        put: operations["updateApi"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/apis/{id}/bruno": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Download Bruno project
         * @description Geeft de gegenereerde Bruno ZIP terug.
         */
        get: operations["getBruno"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/apis/{id}/postman": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Download Postman collectie
         * @description Geeft de gegenereerde Postman JSON terug.
         */
        get: operations["getPostman"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/organisations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Alle organisaties ophalen
         * @description Geeft een lijst van alle organisaties terug.
         */
        get: operations["listOrganisations"];
        put?: never;
        /**
         * Voeg een nieuwe organisatie toe
         * @description Voeg een organisatie toe op basis van URI en label.
         */
        post: operations["createOrganisation"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        CreateApiInput: {
            contact?: components["schemas"]["ModelsContact"];
            id?: string;
            oasUrl?: string;
            organisationUri?: string;
        };
        CreateOrganisationInput: {
            label?: string;
            uri?: string;
        };
        ModelsApiDetail: {
            _links?: components["schemas"]["ModelsLinks"];
            /** Format: int32 */
            adrScore?: number | null;
            auth?: string[];
            contact?: components["schemas"]["ModelsContact"];
            description?: string;
            docsUrl?: string;
            id?: string;
            lifecycle?: components["schemas"]["ModelsLifecycle"];
            lintResults?: components["schemas"]["ModelsLintResult"][];
            oasUrl?: string;
            organisation?: components["schemas"]["ModelsOrganisationSummary"];
            servers?: components["schemas"]["ModelsServerInfo"][];
            title?: string;
        };
        ModelsApiSummary: {
            _links?: components["schemas"]["ModelsLinks"];
            /** Format: int32 */
            adrScore?: number | null;
            contact?: components["schemas"]["ModelsContact"];
            description?: string;
            id?: string;
            lifecycle?: components["schemas"]["ModelsLifecycle"];
            oasUrl?: string;
            organisation?: components["schemas"]["ModelsOrganisationSummary"];
            title?: string;
        };
        ModelsContact: {
            email?: string;
            name?: string;
            url?: string;
        };
        ModelsLifecycle: {
            deprecated?: string;
            status?: string;
            sunset?: string;
            version?: string;
        };
        ModelsLink: {
            href?: string;
        };
        ModelsLinks: {
            apis?: components["schemas"]["ModelsLink"];
            first?: components["schemas"]["ModelsLink"];
            last?: components["schemas"]["ModelsLink"];
            next?: components["schemas"]["ModelsLink"];
            prev?: components["schemas"]["ModelsLink"];
            self?: components["schemas"]["ModelsLink"];
        };
        ModelsLintMessage: {
            /** Format: date-time */
            CreatedAt?: string;
            code?: string;
            /** Format: int32 */
            column?: number;
            id?: string;
            infos?: components["schemas"]["ModelsLintMessageInfo"][];
            /** Format: int32 */
            line?: number;
            lintResultId?: string;
            severity?: string;
        };
        ModelsLintMessageInfo: {
            id?: string;
            lintMessageId?: string;
            message?: string;
            path?: string;
        };
        ModelsLintResult: {
            ApiID?: string;
            /** Format: date-time */
            CreatedAt?: string;
            ID?: string;
            /** Format: int32 */
            failures?: number;
            messages?: components["schemas"]["ModelsLintMessage"][];
            successes?: boolean;
            /** Format: int32 */
            warnings?: number;
        };
        ModelsOrganisation: {
            label?: string;
            uri?: string;
        };
        ModelsOrganisationSummary: {
            _links?: components["schemas"]["ModelsLinks"];
            label?: string;
            uri?: string;
        };
        ModelsServerInfo: {
            description?: string;
            url?: string;
        };
        UpdateApiInput: {
            contact?: components["schemas"]["ModelsContact"];
            oasUrl?: string;
            organisationUri?: string;
        };
    };
    responses: {
        /** @description Resource does not exist */
        404: {
            headers: {
                "API-Version": components["headers"]["headers-API-Version"];
                [name: string]: unknown;
            };
            content?: never;
        };
    };
    parameters: never;
    requestBodies: never;
    headers: {
        /** @description De API-versie van de response */
        "API-Version": string;
        /** @description Semver of this API */
        "headers-API-Version": string;
    };
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    listApis: {
        parameters: {
            query?: {
                ids?: string | null;
                organisation?: string | null;
                page?: number;
                perPage?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    /** @description De API-versie van de response */
                    "API-Version"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ModelsApiSummary"][];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    createApi: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["CreateApiInput"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    /** @description De API-versie van de response */
                    "API-Version"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ModelsApiSummary"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    retrieveApi: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    /** @description De API-versie van de response */
                    "API-Version"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ModelsApiDetail"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updateApi: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["UpdateApiInput"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    /** @description De API-versie van de response */
                    "API-Version"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ModelsApiSummary"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getBruno: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    /** @description De API-versie van de response */
                    "API-Version"?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getPostman: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    /** @description De API-versie van de response */
                    "API-Version"?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    listOrganisations: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    /** @description De API-versie van de response */
                    "API-Version"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ModelsOrganisationSummary"][];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    createOrganisation: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["CreateOrganisationInput"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    /** @description De API-versie van de response */
                    "API-Version"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ModelsOrganisation"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
